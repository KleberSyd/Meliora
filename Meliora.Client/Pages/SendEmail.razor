@page "/send-email"
@using Meliora.Services.CookiesKristen.Interfaces
@rendermode InteractiveAuto
@inject IMailHoglService EmailService
<PageTitle>Send Email</PageTitle>

<h1>Using MailHog</h1>

<div class="container">
    <div class="row justify-content-center">
        <div class="col-md-8">
            <div class="card">
                <div class="card-header">
                    Email Details
                </div>
                <div class="card-body">
                    <div class="mb-3">
                        <label for="fromEmail" class="form-label">From Email</label>
                        <input type="email" class="form-control" id="fromEmail" @bind="_fromEmail" placeholder="Your email">
                    </div>
                    <div class="mb-3">
                        <label for="subject" class="form-label">Subject</label>
                        <input type="text" class="form-control" id="subject" @bind="_subject" placeholder="Email subject">
                    </div>
                    <div class="mb-3">
                        <label for="body" class="form-label">Message</label>
                        <textarea class="form-control" id="body" @bind="_body" rows="3"></textarea>
                    </div>
                    <button class="btn btn-primary" @onclick="SendEmailAsync">Send Email</button>
                </div>
            </div>
            @if (string.IsNullOrWhiteSpace(_fromEmail) && _sendButtonClicked)
            {
                <div class="alert alert-danger" role="alert">
                    Please enter an email address.
                </div>
            }

            @if (string.IsNullOrWhiteSpace(_subject) && _sendButtonClicked)
            {
                <div class="alert alert-danger" role="alert">
                    Please enter a subject.
                </div>
            }

            @if (string.IsNullOrWhiteSpace(_body) && _sendButtonClicked)
            {
                <div class="alert alert-danger" role="alert">
                    Please enter a message.
                </div>
            }

            @if (_emailSent)
            {
                <div class="alert alert-primary" role="alert">
                    Email sent!
                    <a href="http://localhost:8025/">Click here</a> to check the email sent using MailHog.
                </div>
            }
        </div>
    </div>
</div>

<footer class="container mt-4">
    <div class="row">
        <div class="col text-center">
            <p class="text-muted">This application is using <strong>MailHog</strong> as an SMTP server for development purposes only. It allows for testing email functionalities without sending real emails.</p>
            <p class="text-muted">This service always send e-mail to <strong>kristen@cookies.com</strong></p>
        </div>
    </div>
</footer>

@code {
    private string? _fromEmail;
    private string? _subject;
    private string? _body;
    private bool _sendButtonClicked;
    private bool _emailSent;

    private async Task SendEmailAsync()
    {
        _emailSent = false;
        if (string.IsNullOrWhiteSpace(_fromEmail) || string.IsNullOrWhiteSpace(_subject) || string.IsNullOrWhiteSpace(_body))
        {
            _sendButtonClicked = true;
            return;
        }

        await EmailService.SendEmailAsync(_fromEmail, _subject, _body);
        _fromEmail = null;
        _subject = null;
        _body = null;
        _sendButtonClicked = false;
        _emailSent = true;
    }
}